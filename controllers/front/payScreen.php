<?php


use Mollie\Api\Types\PaymentMethod;

class MolliePayScreenModuleFrontController extends ModuleFrontController
{

    public function postProcess()
    {
        $validateUrl = Context::getContext()->link->getModuleLink(
            'mollie',
            'payment',
            array('method' => PaymentMethod::CREDITCARD, 'rand' => time()),
            true
        );

        $cartId = $this->context->cart->id;
        $secureKey = $this->context->customer->secure_key;
        $cardToken = Tools::getValue('mollieCardToken');

        $orderId = Order::getOrderByCartId($this->context->cart->id);
        $mollie = new \Mollie\Api\MollieApiClient();
        $mollie->setApiKey(Configuration::get(mollie::MOLLIE_API_KEY));


        $orderLink = $this->context->link->getPageLink(
            'order-confirmation',
            true,
            null,
            [
                'id_cart' => $cartId,
                'id_module' => $this->module->name,
                'id_order' => $orderId,
                'key' => $secureKey,
            ]
        );

        $payment = $mollie->payments->create([
            "method" => "creditcard",
            "amount" => [
                "currency" => $this->context->currency->iso_code,
                "value" => (string)$this->context->cart->getOrderTotal()
            ],
            "description" => "Order #1",
            "redirectUrl" => $validateUrl,
            "webhookUrl" => "https://webshop.example.org/payments/webhook/",
            "cardToken" => $cardToken,
        ]);

        Tools::redirect($payment->redirectUrl);
    }

    public function initContent()
    {
        parent::initContent();

        $this->context->smarty->assign([
            'mollieIFrameJS' => 'https://js.mollie.com/v1/mollie.js',
            'price' => $this->context->cart->getOrderTotal(),
            'priceSign' => $this->context->currency->getSign()
        ]);
        $this->setTemplate('module:mollie/views/templates/' . 'front/mollie_iframe.tpl');

    }

    public function setMedia()
    {
        Media::addJsDef([
            'profileId' => Configuration::get(Mollie::MOLLIE_PROFILE_ID),
        ]);
        $this->addJS("{$this->module->getPathUri()}views/js/front/mollie_iframe.js");
        $this->addCSS("{$this->module->getPathUri()}views/css/mollie_iframe.css");

        return parent::setMedia(); // TODO: Change the autogenerated stub
    }
}