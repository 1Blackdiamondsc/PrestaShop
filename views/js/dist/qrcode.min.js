/*!
 *  Copyright (c) 2012-2020, Mollie B.V.
 *  All rights reserved.
 *  
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 *  
 *  - Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *  - Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *  
 *  THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY
 *  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 *  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 *  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 *  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
 *  DAMAGE.
 *  
 *  @author     Mollie B.V. <info@mollie.nl>
 *  @copyright  Mollie B.V.
 *  @license    Berkeley Software Distribution License (BSD-License 2) http://www.opensource.org/licenses/bsd-license.php
 *  @category   Mollie
 *  @package    Mollie
 *  @link       https://www.mollie.nl
 */
(window.webpackJsonP_mollie=window.webpackJsonP_mollie||[]).push([["qrcode"],{51:function(r,n,e){"use strict";e.r(n);e(69),e(65),e(70),e(71),e(66),e(67),e(23),e(61),e(68),e(22),e(72),e(24);var t=e(56),o=e.n(t),a=e(84);function i(r,n){return function(r){if(Array.isArray(r))return r}(r)||function(r,n){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(r)))return;var e=[],t=!0,o=!1,a=void 0;try{for(var i,c=r[Symbol.iterator]();!(t=(i=c.next()).done)&&(e.push(i.value),!n||e.length!==n);t=!0);}catch(r){o=!0,a=r}finally{try{t||null==c.return||c.return()}finally{if(o)throw a}}return e}(r,n)||function(r,n){if(!r)return;if("string"==typeof r)return c(r,n);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(e);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return c(r,n)}(r,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(r,n){(null==n||n>r.length)&&(n=r.length);for(var e=0,t=new Array(n);e<n;e++)t[e]=r[e];return t}function s(r,n,e,t,o,a,i){try{var c=r[a](i),s=c.value}catch(r){return void e(r)}c.done?n(s):Promise.resolve(s).then(t,o)}n.default=function(r,n,t){var c,u="string"==typeof r?document.getElementById(r):r;(c=regeneratorRuntime.mark((function r(){var c,s,f;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,Promise.all([Promise.all([e.e("vendors~banks~carrierconfig~methodconfig~qrcode~transaction~updater"),e.e("vendors~banks~carrierconfig~methodconfig~transaction~updater"),e.e("vendors~banks~carrierconfig~methodconfig~qrcode~transaction"),e.e("vendors~banks~carrierconfig~methodconfig~transaction"),e.e("banks")]).then(e.bind(null,152))]);case 2:c=r.sent,s=i(c,1),f=s[0].default,Object(a.render)(o.a.createElement(f,{title:n,center:t}),u);case 6:case"end":return r.stop()}}),r)})),function(){var r=this,n=arguments;return new Promise((function(e,t){var o=c.apply(r,n);function a(r){s(o,e,t,a,i,"next",r)}function i(r){s(o,e,t,a,i,"throw",r)}a(void 0)}))})()}}},0,["vendors~banks~carrierconfig~methodconfig~qrcode~transaction~updater","vendors~banks~carrierconfig~methodconfig~transaction~updater","vendors~banks~carrierconfig~methodconfig~qrcode~transaction","vendors~banks~carrierconfig~methodconfig~transaction","banks"]]);